<launch>

  
  <!-- Transformation Configuration ... Setting Up the Relationships Between Coordinate Frames --> 
  <!-- <node pkg="tf" type="static_transform_publisher" name="base_link_to_camera" args="0.15 0 0.20 0 0 0 base_link zed2i_base_link 30" /> -->
  <node pkg="tf" type="static_transform_publisher" name="imu_broadcaster" args=" 0.2 -0.1 0.24 0 0 -1.5708 base_link zed2_imu_link 30" />
  <!-- <origin xyz="0.2 -0.1 0.24" rpy="0 0 -1.5708"/>  -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0.36 0 0 0 base_footprint base_link 20" /> -->
  <!-- odom to base_footprint transform will be provided by the robot_pose_ekf node -->
  <!-- map to odom will be provided by the AMCL -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="-4.775 1.534 0 0 0 0 map odom 20" /> -->
  

  <!-- <node pkg="rosserial_python" type="serial_node.py" name="serial_node">
    <param name="port" value="/dev/ttyACM0"/>
    <param name="baud" value="57600"/> 
  </node>
  <node pkg="rosserial_python" type="serial_node.py" name="serial_node1">
    <param name="port" value="/dev/ttyACM1"/>
    <param name="baud" value="57600"/> 
  </node> -->

  <!-- <node pkg="localization_data_pub" type="ekf_odom_pub.py" name="ekf_odom_pub"></node>  -->

  <!-- Wheel Odometry Publisher -->
  <!-- Subscribe: /right_ticks, /left_ticks, /initial_2d -->
  <!-- Publish: /odom_data_euler, /odom_data_quat -->
  <!-- <remap from="odom" to="" /> -->
  <remap from="imu_data" to="/zed2/imu/data" />
  <remap from="vo" to="odom" />
  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
    <param name="output_frame" value="odom"/>
    <param name="base_footprint_frame" value="base_footprint"/>
    <param name="freq" value="30"/>
    <param name="sensor_timeout" value="1.0"/>
    <param name="odom_used" value="false"/>
    <param name="imu_used" value="true"/>
    <param name="vo_used" value="true"/>
    <param name="gps_used" value="false"/>
    <param name="debug" value="true"/>
    <param name="self_diagnose" value="false"/>
  </node>
	
  <!-- ZED2i Camera Node -->
  <!-- Publish: /zed2i/zed_node/depth/depth_registered, /zed2i/zed_node/point_cloud/cloud_registered, /zed2i/zed_node/imu/data -->
  <!-- <rosparam param="odom">odom</rosparam>
  <rosparam param="zed2i_imu_link">imu</rosparam> -->
	
  <!-- Initial Pose and Goal Publisher -->
  <!-- Publish: /initialpose, /move_base_simple/goal -->
  <node pkg="rviz" type="rviz" name="rviz" ></node>

  <!-- Subscribe: /initialpose, /move_base_simple/goal -->
  <!-- Publish: /initial_2d, /goal_2d --> 
  <node pkg="localization_data_pub" type="rviz_click_to_2d" name="rviz_click_to_2d"></node>   

  <!-- Map File -->
  <arg name="map_file" default="$(find navstack_pub)/maps/iroc_map.yaml"/>
	
  <!-- Map Server -->
  <!-- Publish: /map, /map_metadata -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)" />

	
  <!-- Add AMCL example for differential drive robots for Localization -->
  <!-- Subscribe: /scan, /tf, /initialpose, /map -->
  <!-- Publish: /amcl_pose, /particlecloud, /tf -->
  <include file="$(find amcl)/examples/amcl_diff.launch">

    <!-- <param name="initial_pose_x" value="-4.601"/>  X position at map center -->
    <!-- <param name="initial_pose_y" value="1.393"/>  Y position at map center -->
    <!-- <arg name="scan" default="/scan" /> -->
    <!-- <remap from="initialpose" to="initial_2d"/> -->
  </include>
	
  <!-- Move Base Node -->
  <!-- Subscribe: /move_base_simple/goal -->
  <!-- Publish: /cmd_vel -->
  <!-- <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find navstack_pub)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find navstack_pub)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find navstack_pub)/param/local_costmap_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find navstack_pub)/param/global_costmap_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find navstack_pub)/param/base_local_planner_params.yaml" command="load" />
  </node> -->
  <node pkg="move_base" type="move_base" name="move_base" output="screen">
    <rosparam file="$(find navstack_pub)/param/move_base_params.yaml" command="load"/>
    <rosparam file="$(find navstack_pub)/param/global_costmap_params.yaml" command="load" ns="global_costmap"/>
    <rosparam file="$(find navstack_pub)/param/local_costmap_params.yaml" command="load" ns="local_costmap"/>
    <rosparam file="$(find navstack_pub)/param/teb_local_planner_params.yaml" command="load"/>
  </node>
</launch>
